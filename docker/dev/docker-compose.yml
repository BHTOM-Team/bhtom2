version: "3.7"

services:

  bhtom_db:
    container_name: bhtom_db
    restart: always
    env_file:
      - .env
    build:
      context: ../..
      dockerfile: docker/dev/db_Dockerfile
    networks:
      - bhtom_network
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD="${POSTGRES_PASSWORD}"
    ports:
      - "${POSTGRES_PORT}:5432"

  bhtom:
    container_name: bhtom
    build:
      context: ../..
      dockerfile: docker/dev/dev_web_Dockerfile
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    restart: always
    env_file:
      - .env
    networks:
      - bhtom_network
    volumes:
      - data_store:/data
    ports:
      - "8010:8000"
    depends_on:
      - bhtom_db

  zookeeper1:
    image: 'confluentinc/cp-zookeeper:latest'
    container_name: zookeeper1
    hostname: zookeeper1
    env_file:
      - .env
    networks:
      - bhtom_network
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: 0.0.0.0:2888:3888
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: always


  kafka1:
    image: 'confluentinc/cp-kafka:latest'
    container_name: kafka1
    restart: always
    env_file:
      - .env
    networks:
      - bhtom_network
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_REPLICA_LAG_TIME_MAX_MS: 4000
      KAFKA_SOCKET_TIMEOUT_MS: 4000

    depends_on:
      - zookeeper1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    env_file:
      - .env
    networks:
      - bhtom_network
    ports:
      - "8080:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: bhtom2
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka1:19092'
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper1:2181"
    depends_on:
      - kafka1
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - bhtom_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - bhtom_network
    depends_on:
      - prometheus

volumes:
  data_store:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_STORE_PATH}

networks:
  bhtom_network:
    driver: bridge